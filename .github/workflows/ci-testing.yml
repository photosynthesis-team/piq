name: testing

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: master

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      USING_COVERAGE: '3.6'

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest \
                      pytest-cov \
                      tensorflow \
                      libsvm \
                      pybrisque \
                      scikit-image \
                      pandas \
                      tqdm
          pip install --upgrade scipy
      - name: Test with pytest
        run: |
          pytest -x --cov=./piq --cov-report=xml
      - name: Upload coverage to Codecov
        # Upload codecov reports only from a pipeline for a single version defined in the env variable
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
